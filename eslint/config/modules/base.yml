# explore: true
parser: "@babel/eslint-parser"
parserOptions:
  ecmaVersion: 2020
  ecmaFeatures:
    modules: true
    impliedStrict: true
    globalReturn: true
  sourceType: "module"
  requireConfigFile: false
env:
  es2022: true
  commonjs: true
  node: true
  browser: true
  jest: true
ignorePatterns:
  - node_modules
  - dist
plugins:
  - builtin
  - eslint-plugin-prettier
  - eslint-plugin-oxlint
extends:
  - prettier
rules:
  # sanity
  no-var: error
  no-useless-return: error
  no-useless-rename: error
  no-useless-escape: error
  no-useless-constructor: error
  no-useless-concat: error
  no-useless-computed-key: error
  no-useless-catch: error
  no-useless-call: error
  no-useless-backreference: error
  no-use-before-define: error
  no-unused-vars: error
  no-unused-labels: error
  no-unused-expressions: error
  no-unsafe-optional-chaining: error
  no-unsafe-negation: error
  no-unsafe-finally: error
  no-unreachable-loop: error
  no-unreachable: error
  no-unneeded-ternary: error
  no-unmodified-loop-condition: error
  no-unexpected-multiline: error
  no-underscore-dangle: off
  no-undefined: off
  no-undef-init: error
  no-undef: off
  vars-on-top: off
  one-var-declaration-per-line: off
  one-var: off
  strict:
    - error
    - safe
  symbol-description: error
  unicode-bom:
    - error
    - never
  valid-typeof: error
  yoda: error
  require-yield: error
  require-unicode-regexp: off
  require-await: off
  require-atomic-updates: error
  radix:
    - error
    - as-needed
  prefer-template: error
  prefer-spread: error
  prefer-rest-params: error
  prefer-regex-literals: error
  prefer-reflect: off
  prefer-promise-reject-errors:
    - error
    - allowEmptyReject: true
  prefer-object-spread: error
  prefer-numeric-literals: error
  prefer-named-capture-group: off
  prefer-exponentiation-operator: error
  prefer-destructuring:
    - error
    - array: false
  prefer-const: error
  prefer-arrow-callback: error
  object-shorthand: error
  no-with: error
  no-throw-literal: error
  no-this-before-super: error
  no-ternary: off
  no-template-curly-in-string: error
  no-warning-comments: off
  no-void: off
  no-sparse-arrays: error
  no-shadow-restricted-names: error
  no-shadow: error
  no-setter-return: error
  no-sequences: error
  no-self-compare: error
  no-self-assign: error
  no-script-url: error
  no-return-await: error
  no-return-assign: off
  constructor-super: error
  consistent-this: [error, self]
  consistent-return: off
  no-redeclare: error
  no-prototype-builtins: error
  no-proto: error
  no-promise-executor-return: error
  no-process-exit: off
  no-process-env: off
  no-plusplus: off
  no-path-concat: off
  no-param-reassign:
    - error
    - props: true
      ignorePropertyModificationsFor:
        - acc
        - accumulator
        - carry
        - draft
      # ignorePropertyModificationsForRegex:
      #   - ^acc
  no-octal-escape: error
  no-octal: warn
  no-obj-calls: error
  no-nonoctal-decimal-escape: error
  no-new-wrappers: error
  no-new-symbol: error
  no-new-require: off
  no-new-object: error
  no-new-func: error
  no-new: error
  no-nested-ternary: warn
  no-negated-in-lhs: off
  no-negated-condition: error
  no-native-reassign: off # deprecated
  no-multiple-empty-lines: error
  no-multi-str: error
  no-multi-spaces: off
  no-multi-assign: error
  no-mixed-spaces-and-tabs: off
  no-mixed-requires: off # deprecated
  no-mixed-operators: off
  no-misleading-character-class: error
  no-loss-of-precision: error
  no-loop-func: error
  no-lonely-if: error
  no-lone-blocks: error
  no-labels: warn
  no-label-var: error
  no-iterator: error
  no-irregular-whitespace: error
  no-invalid-this: off
  no-invalid-regexp: error
  no-inner-declarations: error
  no-import-assign: error
  no-implied-eval: error
  no-implicit-globals: warn
  no-implicit-coercion: error
  no-global-assign: error
  no-func-assign: error
  no-floating-decimal: error
  no-fallthrough: warn
  no-extra-semi: error
  no-extra-parens: off
  # - error
  # - all
  # - enforceForArrowConditionals: false
  #   enforceForSequenceExpressions: false
  #   ignoreJSX: all
  #   nestedBinaryExpressions: false
  no-extra-label: error
  no-extra-boolean-cast: error
  no-extra-bind: error
  no-extend-native: error
  no-ex-assign: error
  no-eval: error
  no-eq-null: error
  no-empty-pattern: error
  no-empty-function: off
  no-empty-character-class: error
  no-empty: off
  no-else-return: error
  no-duplicate-imports: error
  no-duplicate-case: error
  no-dupe-keys: error
  no-dupe-else-if: error
  no-dupe-class-members: error
  no-dupe-args: error
  no-div-regex: error
  no-delete-var: error
  complexity: off
  no-debugger: warn
  no-control-regex: error
  no-continue: off
  no-constructor-return: error
  no-constant-condition: error
  no-const-assign: error
  no-console: off
  no-confusing-arrow: off
  no-cond-assign: error
  no-compare-neg-zero: error
  no-class-assign: error
  max-statements-per-line: off
  max-depth: off
  accessor-pairs: off
  max-classes-per-file: off
  max-statements: off
  max-params: [error, { max: 5 }]
  max-nested-callbacks: off
  max-lines-per-function: off
  init-declarations: off
  max-lines: off
  class-methods-use-this: off
  no-catch-shadow: off
  no-case-declarations: error
  no-caller: error
  no-buffer-constructor: off
  no-bitwise: warn
  no-await-in-loop: error
  no-async-promise-executor: error
  guard-for-in: error
  grouped-accessor-pairs: error
  eol-last: off
  array-callback-return: error
  dot-notation: error
  dot-location: off
  default-param-last: error
  default-case-last: error
  default-case: error
  curly: [error, multi-line]
  block-scoped-var: error
  eqeqeq: error
  global-require: off
  getter-return: error
  func-style: off
  for-direction: error
  func-names: off
  func-name-matching: off
  no-array-constructor: error
  no-alert: off
  no-magic-numbers:
    - error
    - ignore: [-1, 0, 1, 2, 10, 60, 100, 1000, 3000, 1234, 8000, 8080]
  id-length: off
  # - error
  # - min: 2
  #   exceptions: [_, i, j, e, t, a, b, k, v, x, y, z, h, r]
  use-isnan:
    - error
    - enforceForSwitchCase: true
      enforceForIndexOf: true
  # sorting
  sort-imports:
    - error
    - ignoreMemberSort: false
      ignoreDeclarationSort: true
  sort-keys: off
  # - error
  # - asc
  # - caseSensitive: true
  #   natural: true
  sort-vars: off
  # style
  no-trailing-spaces: off
  comma-style: off
  comma-spacing: off
  comma-dangle: off
  no-tabs: off
  no-whitespace-before-property: off
  lines-between-class-members: off
  brace-style: off
  array-bracket-spacing: off
  array-bracket-newline: off
  lines-around-directive: off
  generator-star-spacing: off
  key-spacing: off
  array-element-newline: off
  jsx-quotes: off
  lines-around-comment: off
  function-paren-newline: off # [error, consistent]
  function-call-argument-newline: off
  func-call-spacing: error
  camelcase: off
  linebreak-style: [error, unix]
  capitalized-comments: off
  line-comment-position: off
  keyword-spacing: off
  arrow-parens: off
  arrow-body-style: off
  computed-property-spacing: off
  object-property-newline: off
  object-curly-spacing: off
  multiline-ternary: off # [error, always-multiline]
  max-len: off
  multiline-comment-style: off
  object-curly-newline: off # - error - multiline: true
  # nonblock-statement-body-position: [error, beside]
  nonblock-statement-body-position: off
  padding-line-between-statements: off
  padded-blocks: off
  operator-linebreak: off
  operator-assignment: off
  semi: off
  semi-spacing: off
  semi-style: off
  space-before-blocks: off
  newline-per-chained-call: off
  newline-after-var: off
  new-cap: off
  new-parens: error
  newline-before-return: off
  space-before-function-paren: off
  space-in-parens: off # [error, never]
  space-infix-ops: off
  block-spacing: off
  arrow-spacing: off
  space-unary-ops: off
  switch-colon-spacing: off
  template-curly-spacing: off
  template-tag-spacing: off
  implicit-arrow-linebreak: off # [error, beside]
  wrap-iife: [error, inside]
  quotes: off
  quote-props: off # [error, as-needed] # handled by prettier
  wrap-regex: off
  yield-star-spacing: off
  indent: off
  rest-spread-spacing: off
  no-regex-spaces: error
  no-inline-comments: off
  spaced-comment: off
  # - error
  # - always
  # - exceptions: ["-", "+", "*"]
  # deprecated
  valid-jsdoc: off
  require-jsdoc: off
  no-sync: off
  no-spaced-func: off
  indent-legacy: off
  handle-callback-err: off
  callback-return: off # deprecated
  # upcoming
  logical-assignment-operators: off
  no-constant-binary-expression: error
  no-empty-static-block: error
  no-new-native-nonconstructor: error
  no-unused-private-class-members: error
  prefer-object-has-own: warn
  no-object-constructor: error
  # custom
  id-blacklist: off
  id-denylist: off
  id-match: off
  no-restricted-exports: off
  no-restricted-globals: off
  no-restricted-imports: off
  no-restricted-modules: off
  no-restricted-properties: off
  no-restricted-syntax: off
  prettier/prettier: off
